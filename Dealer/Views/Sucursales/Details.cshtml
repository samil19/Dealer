@model Dealer.Sucursal

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Sucursal</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Nombre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Nombre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RNC)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RNC)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Telefono)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Telefono)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Direccion)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Direccion)
        </dd>
        
        <dd>
            <div class="form-group">
                <div class="col-mdp-10">
                    <div id="map" style="height: 300px; width: 700px;"></div>
                    <script>
                        function initMap() {
                            var db = { lat: @Html.DisplayFor(model => model.Latitud), lng: @Html.DisplayFor(model => model.Longitud) };
            var map = new google.maps.Map(document.getElementById('map'), {
                center: db,
                zoom: 16
            });

            var input = (
            document.getElementById('Direccion'));

            var types = document.getElementById('type-selector');
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
                position: db,
                draggable: false,
                map: map
            });




            // Sets a listener on a radio button to change the filter type on Places
            // Autocomplete.
            function setupClickListener(id, types) {
                var radioButton = document.getElementById(id);
                radioButton.addEventListener('click', function () {
                    autocomplete.setTypes(types);
                });
            }



            setupClickListener('changetype-all', []);
            setupClickListener('changetype-address', ['address']);
            setupClickListener('changetype-establishment', ['establishment']);
            setupClickListener('changetype-geocode', ['geocode']);



        }


                    </script>

                    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDLov3DZ5oTZUglO6OQ_-pDvIMZ_FsIJ_8&libraries=places&callback=initMap"
                            async defer></script>
                </div>
            </div>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Latitud)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Latitud)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Longitud)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Longitud)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID_Sucursal }) |
    @Html.ActionLink("Back to List", "Index")
</p>
